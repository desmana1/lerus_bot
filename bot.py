import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(level=logging.INFO)
log = logging.getLogger("tg-bot")

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
TOKEN = os.getenv("TOKEN")  # –∑–∞–¥–∞–π –≤ Render -> Environment
PORT = int(os.getenv("PORT", "8080"))  # Render –∑–∞–¥–∞—ë—Ç —Å–∞–º
BASE_URL = os.getenv("RENDER_EXTERNAL_URL") or os.getenv("WEBHOOK_URL")  # –ø—É–±–ª–∏—á–Ω—ã–π URL —Å–µ—Ä–≤–∏—Å–∞

# --- –•—ç–Ω–¥–ª–µ—Ä—ã ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –Ω–∞ Render + –≤–µ–±—Ö—É–∫–∏ –≥–æ—Ç–æ–≤ üöÄ")

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥—ã: /start, /help ‚Äî –∏ —è —ç—Ö–æ-–±–æ—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞.")

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and update.message.text:
        await update.message.reply_text(update.message.text)

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
def main():
    if not TOKEN:
        raise RuntimeError("–ù–µ—Ç TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

    if not BASE_URL:
        raise RuntimeError("–ù–µ—Ç RENDER_EXTERNAL_URL/WEBHOOK_URL ‚Äî Render –µ—â—ë –Ω–µ –≤—ã–¥–∞–ª –ø—É–±–ª–∏—á–Ω—ã–π URL")

    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –≤–µ–±—Ö—É–∫–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –≤ –ø—É—Ç–∏
    webhook_url = f"{BASE_URL.rstrip('/')}/{TOKEN}"

    log.info("Starting webhook on port %s", PORT)
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=webhook_url,
        drop_pending_updates=True,  # –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã
    )

if __name__ == "__main__":
    main()
